{"version":3,"sources":["angular-bootstrap-confirm.js"],"names":["angular","idIncrementor","module","controller","$scope","$element","$compile","$document","$window","$position","confirmationPopover","positionPopover","position","positionElements","popover","vm","popoverPlacement","top","left","css","showPopover","isVisible","display","hidePopover","togglePopover","this","defaults","placement","attr","triggerSelector","template","join","element","find","append","bind","addEventListener","unbindOnDestroy","$on","remove","unbind","removeEventListener","directive","restrict","bindToController","scope","confirmText","cancelText","message","title","onConfirm","onCancel","confirmButtonType","cancelButtonType","provider","setDefaultConfirmText","value","setDefaultCancelText","setDefaultConfirmButtonType","setDefaultCancelButtonType","setDefaultPlacement","$get"],"mappings":"CAMC,SAASA,GAER,YAEA,IAAIC,GAAgB,CAEpBD,GACGE,OAAO,eACN,aACA,wBACA,aAGDC,WAAW,sBAAA,SAAA,WAAA,WAAA,YAAA,UAAA,YAAA,sBAAsB,SAASC,EAAQC,EAAUC,EAAUC,EAAWC,EAASC,EAAWC,GAsCpG,QAASC,KACP,GAAIC,GAAWH,EAAUI,iBAAiBR,EAAUS,EAASC,EAAGC,kBAAkB,EAClFJ,GAASK,KAAO,KAChBL,EAASM,MAAQ,KACjBJ,EAAQK,IAAIP,GAGd,QAASQ,KACFL,EAAGM,YACNP,EAAQK,KAAKG,QAAS,UACtBX,IACAI,EAAGM,WAAY,GAInB,QAASE,KACHR,EAAGM,YACLP,EAAQK,KAAKG,QAAS,SACtBP,EAAGM,WAAY,GAInB,QAASG,KACFT,EAAGM,UAGNE,IAFAH,IA7DJ,GAAIL,GAAKU,IACTV,GAAGW,SAAWhB,EACdK,EAAGC,iBAAmBD,EAAGY,WAAaZ,EAAGW,SAASC,UAE7CtB,EAASuB,KAAK,OACjBvB,EAASuB,KAAK,KAAM,mBAAqB3B,KAG3CG,EAAOyB,gBAAkB,IAAMxB,EAASuB,KAAK,KAE7C,IAAIE,IACF,uHACE,4BACA,0DACA,gCACE,oCACA,oBACE,yBACE,6NAEF,SACA,yBACE,wNAEF,SACF,SACF,SACF,UACAC,KAAK,MAEHjB,EAAUd,EAAQgC,QAAQF,EAC9BhB,GAAQK,IAAI,UAAW,QACvBb,EAASQ,GAASV,GAClBG,EAAU0B,KAAK,QAAQC,OAAOpB,GAE9BC,EAAGM,WAAY,EAgCfN,EAAGK,YAAcA,EACjBL,EAAGQ,YAAcA,EACjBR,EAAGS,cAAgBA,EAEnBnB,EAAS8B,KAAK,QAASX,GAEvBhB,EAAQ4B,iBAAiB,SAAUzB,EAEnC,IAAI0B,GAAkBjC,EAAOkC,IAAI,WAAY,WAC3CD,IACAvB,EAAQyB,SACRlC,EAASmC,OAAO,QAAShB,GACzBhB,EAAQiC,oBAAoB,SAAU9B,QAKzC+B,UAAU,aAAc,WAEvB,OACEC,SAAU,KACVxC,WAAY,2BACZyC,kBAAkB,EAClBC,OACEC,YAAa,IACbC,WAAY,IACZC,QAAS,IACTC,MAAO,IACPtB,UAAW,IACXuB,UAAW,IACXC,SAAU,IACVC,kBAAmB,IACnBC,iBAAkB,QAKvBC,SAAS,sBAAuB,WAE/B,GAAI5B,IACFoB,YAAa,UACbC,WAAY,SACZK,kBAAmB,UACnBC,iBAAkB,UAClB1B,UAAW,OAGT2B,EAAW7B,IAEfA,MAAK8B,sBAAwB,SAASC,GAEpC,MADA9B,GAASoB,YAAcU,EAChBF,GAGT7B,KAAKgC,qBAAuB,SAASD,GAEnC,MADA9B,GAASqB,WAAaS,EACfF,GAGT7B,KAAKiC,4BAA8B,SAASF,GAE1C,MADA9B,GAAS0B,kBAAoBI,EACtBF,GAGT7B,KAAKkC,2BAA6B,SAASH,GAEzC,MADA9B,GAAS2B,iBAAmBG,EACrBF,GAGT7B,KAAKmC,oBAAsB,SAASJ,GAElC,MADA9B,GAASC,UAAY6B,EACdF,GAGT7B,KAAKoC,KAAO,WACV,MAAOnC,OAKb1B","file":"angular-bootstrap-confirm.min.js","sourcesContent":["(function(angular) {\n\n  'use strict';\n\n  var idIncrementor = 0;\n\n  angular\n    .module('mwl.confirm', [\n      'ngSanitize',\n      'ui.bootstrap.position',\n      'offClick'\n    ])\n\n    .controller('PopoverConfirmCtrl', function($scope, $element, $compile, $document, $window, $position, confirmationPopover) {\n      var vm = this;\n      vm.defaults = confirmationPopover;\n      vm.popoverPlacement = vm.placement || vm.defaults.placement;\n\n      if (!$element.attr('id')) {\n        $element.attr('id', 'popover-trigger-' + idIncrementor++);\n      }\n\n      $scope.triggerSelector = '#' + $element.attr('id'); //eslint-disable-line angular/ng_controller_as\n\n      var template = [\n        '<div class=\"popover\" ng-class=\"vm.popoverPlacement\" off-click=\"vm.hidePopover()\" off-click-filter=\"triggerSelector\">',\n          '<div class=\"arrow\"></div>',\n          '<h3 class=\"popover-title\" ng-bind-html=\"vm.title\"></h3>',\n          '<div class=\"popover-content\">',\n            '<p ng-bind-html=\"vm.message\"></p>',\n            '<div class=\"row\">',\n              '<div class=\"col-xs-6\">',\n                '<button class=\"btn btn-block\" ng-class=\"\\'btn-\\' + (vm.confirmButtonType || vm.defaults.confirmButtonType)\" ' +\n                'ng-click=\"vm.onConfirm(); vm.hidePopover()\" ng-bind-html=\"vm.confirmText || vm.defaults.confirmText\"></button>',\n              '</div>',\n              '<div class=\"col-xs-6\">',\n                '<button class=\"btn btn-block\" ng-class=\"\\'btn-\\' + (vm.cancelButtonType || vm.defaults.cancelButtonType)\" ' +\n                'ng-click=\"vm.onCancel(); vm.hidePopover()\" ng-bind-html=\"vm.cancelText || vm.defaults.cancelText\"></button>',\n              '</div>',\n            '</div>',\n          '</div>',\n        '</div>'\n      ].join('\\n');\n\n      var popover = angular.element(template);\n      popover.css('display', 'none');\n      $compile(popover)($scope);\n      $document.find('body').append(popover);\n\n      vm.isVisible = false;\n\n      function positionPopover() {\n        var position = $position.positionElements($element, popover, vm.popoverPlacement, true);\n        position.top += 'px';\n        position.left += 'px';\n        popover.css(position);\n      }\n\n      function showPopover() {\n        if (!vm.isVisible) {\n          popover.css({display: 'block'});\n          positionPopover();\n          vm.isVisible = true;\n        }\n      }\n\n      function hidePopover() {\n        if (vm.isVisible) {\n          popover.css({display: 'none'});\n          vm.isVisible = false;\n        }\n      }\n\n      function togglePopover() {\n        if (!vm.isVisible) {\n          showPopover();\n        } else {\n          hidePopover();\n        }\n      }\n\n      vm.showPopover = showPopover;\n      vm.hidePopover = hidePopover;\n      vm.togglePopover = togglePopover;\n\n      $element.bind('click', togglePopover);\n\n      $window.addEventListener('resize', positionPopover);\n\n      var unbindOnDestroy = $scope.$on('$destroy', function() {\n        unbindOnDestroy();\n        popover.remove();\n        $element.unbind('click', togglePopover);\n        $window.removeEventListener('resize', positionPopover);\n      });\n\n    })\n\n    .directive('mwlConfirm', function() {\n\n      return {\n        restrict: 'EA',\n        controller: 'PopoverConfirmCtrl as vm',\n        bindToController: true,\n        scope: {\n          confirmText: '@',\n          cancelText: '@',\n          message: '@',\n          title: '@',\n          placement: '@',\n          onConfirm: '&',\n          onCancel: '&',\n          confirmButtonType: '@',\n          cancelButtonType: '@'\n        }\n      };\n    })\n\n    .provider('confirmationPopover', function() {\n\n      var defaults = {\n        confirmText: 'Confirm',\n        cancelText: 'Cancel',\n        confirmButtonType: 'success',\n        cancelButtonType: 'default',\n        placement: 'top'\n      };\n\n      var provider = this;\n\n      this.setDefaultConfirmText = function(value) {\n        defaults.confirmText = value;\n        return provider;\n      };\n\n      this.setDefaultCancelText = function(value) {\n        defaults.cancelText = value;\n        return provider;\n      };\n\n      this.setDefaultConfirmButtonType = function(value) {\n        defaults.confirmButtonType = value;\n        return provider;\n      };\n\n      this.setDefaultCancelButtonType = function(value) {\n        defaults.cancelButtonType = value;\n        return provider;\n      };\n\n      this.setDefaultPlacement = function(value) {\n        defaults.placement = value;\n        return provider;\n      };\n\n      this.$get = function() {\n        return defaults;\n      };\n\n    });\n\n}(angular));\n"],"sourceRoot":"/source/"}